@using DuAn.Models.CustomModel
@using DuAn.Models.DbModel
@model AdminModel
@{
    ViewBag.Title = "Index";
}
<style>
    .ui-datepicker.ui-datepicker-inline {
        width: 100% !important;
    }

    .label {
        word-wrap: break-word;
    }
</style>


<div class="row ml-1 col-12">
    <div class="col-lg-6" id="capNhatDuLieuDiv">
        <!--begin::Mixed Widget 18-->
       
        <!--end::Mixed Widget 18-->
    </div>

    <div class="col-lg-6" id="capNhatCongThucDiv">
        <!--begin::Mixed Widget 18-->
        
        <!--end::Mixed Widget 18-->
    </div>
</div>
<div class="row ml-1 col-12">
    <div class="col-lg-4">
        @Html.Action("ListRole", "RoleAccount")
    </div>
    <div class="col-lg-8">
        @Html.Action("ListUser", "Account")
    </div>
    <!--end::Mixed Widget 18-->
</div>
<script>
    $.ajax({
            cache: false,
            url: "@Url.Action("MissingDataPartial", "Admin")",
        dataType:'html',
            success: function (data) {
                $('#capNhatDuLieuDiv').html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                showMessage("Không thể hiển thị dữ liệu bị thiếu", false);
            }
        });
        $.ajax({
            cache: false,
            url: "@Url.Action("InsertFormula", "Admin")",
        dataType:'html',
            success: function (data) {
                $('#capNhatCongThucDiv').html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                showMessage("Không thể hiển thị Form cập nhật công thức", false);
            }
        });
    const sleep = milliseconds => {
        return new Promise(resolve => setTimeout(resolve, milliseconds));
    };
    $(document).ready(function () {

        $('#pageTitle').text('Quản lý dữ liệu');
        $('#pageDirectory').text('Admin');
        var start = new Date(@Model.getLastDate.Year,@Model.getLastDate.Month-1,@Model.getLastDate.Day);
        updateCalendar(start);
            $('#kt_dropzone_3').dropzone({
                addRemoveLinks: true,
                url: "@Url.Action("SaveDropzoneJsUploadedFiles","Admin")", // Set the url for your upload script location
                paramName: "file", // The name that will be used to transfer the file
                maxFiles: 10,
                maxFilesize: 10, // MB
                addRemoveLinks: true,
                acceptedFiles: "text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.csv",
                accept: function (file, done) {
                    var name = file.name;
                    try {
                        var day = parseInt(name.substring(0, 2));
                        var month = parseInt(name.substring(2, 4))-1;
                        var year = parseInt(new Date().getFullYear().toString().substring(0, 3)+name.substring(4, 5));
                        var ID = parseInt(name.substring(5));
                        var myDate = new Date(year, month, day);
                        if (myDate.getDate() != day || myDate.getMonth() != month || myDate.getFullYear() != year) {
                            showMessage("File không hợp lệ", false);
                            done("File không hợp lệ.");
                        }
                        else if (!isNaN(file.name) || file.name.split('.')[0].length > 8) {
                            showMessage("File không hợp lệ", false);
                            done("File không hợp lệ.");
                        } else {
                            done();
                        }
                    }
                    catch{
                        done("File khÔng hợp lệ.");
                    }
                },
                success: function (file, response) {
                    showMessage("Thêm file thành công, đang chờ xử lý", true);
                    $.ajax({
                            cache: false,
                            url: "@Url.Action("viewMissingDataList", "Admin")",
                        data: { fileName: file.name },
                        dataType:'html',
                            success: function (data) {
                                $('#listMissing').html(data);
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                showMessage("Xảy ra lỗi khi cập nhật dữ liệu", false);
                            }
                        });
                    sleep(10000).then(() => {
                        $.ajax({
                            cache: false,
                            url: "@Url.Action("viewMissingDataList", "Admin")",
                            data: {fileName:file.name},
                            success: function (data) {
                                $('#listMissing').html(data);
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                showMessage("Xảy ra lỗi khi cập nhật dữ liệu", false);
                            }
                        });
                    });

                },
                removedfile: function (file) {
                    sleep(0).then(() => {
                        $.ajax({
                            method:'POST',
                            cache: false,
                            url: "@Url.Action("RemoveFile","Admin")",
                            data: { name: file.name },
                            dataType:'json',
                            success: function (message) {
                                if (message.Message == 'Thanhcong') {
                                    file.previewElement.remove();
                                    showMessage("Xóa thành công", true);
                                }
                                else if (message.Message == 'Xuly') {
                                    showMessage("Đang chờ xử lý", false)
                                }
                                else {
                                    showMessage("Xóa thất bại", true);
                                }
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                showMessage("Xóa thất bại", false);
                                console.log(thrownError);
                            }
                        });
                    });
                }
            });
        });

    function updateCalendar(date) {
        $('.datepickerDiv').datepicker({
            startDate: date,
            clearBtn: true,
            format: "dd/mm/yyyy"
        });
    }
    function addBtnClick() {
        var text = document.getElementById('phepTinh').value;
        if (text.length != 0) {
            if (text[text.length - 2] == '+' || text[text.length - 2] == '-') {
                var diemDo = document.getElementById("diemDo");
                var kenh = document.getElementById("kenh");
                var diemDoText = diemDo.options[diemDo.selectedIndex].text;
                if (diemDoText == document.getElementById("diemDo").options[0].text) {
                    showMessage("Chọn điểm đo và kênh", false);
                    return;
                }
                var kenhText = kenh.options[kenh.selectedIndex].text;
                if (kenhText == document.getElementById("kenh").options[0].text) {
                    showMessage("Chọn điểm đo và kênh", false);
                    return;
                }
                var result = diemDoText + '~' + kenhText + ' ';
                document.getElementById('phepTinh').value = text + result;
            }
        }
        else {
            var diemDo = document.getElementById("diemDo");
            var kenh = document.getElementById("kenh");
            var diemDoText = diemDo.options[diemDo.selectedIndex].text;
            if (diemDoText == document.getElementById("diemDo").options[0].text) {
                showMessage("Chọn điểm đo và kênh", false);
                return;
            }
            var kenhText = kenh.options[kenh.selectedIndex].text;
            if (kenhText == document.getElementById("kenh").options[0].text) {
                showMessage("Chọn điểm đo và kênh", false);
                return;
            }
            var result = diemDoText + '~' + kenhText + ' ';
            document.getElementById('phepTinh').value = text + result;
        }
    }

    function delBtnClick() {
        var text = document.getElementById('phepTinh').value;
        if (text.length == 0) {
            showMessage("Không còn gì để xóa", false);
            return;
        }
        text = text.substring(0, text.length - 1);
        document.getElementById('phepTinh').value = text.substring(0, text.lastIndexOf(' '));
    }

    function operatorBtnClick(operator) {
        var text = document.getElementById('phepTinh').value;
        if (text.length > 0 && text[text.length - 2] != '+' && text[text.length - 2] != '-') {
            if (operator == '+') {
                text += '+ ';
            }
            else {
                text += '- ';
            }
            document.getElementById('phepTinh').value = text;
        }
        else {
            showMessage("Lỗi phép tính", false);
        }
    }

    function submitCongThuc() {
        var text = document.getElementById('phepTinh').value;
        var nameStr = document.getElementById('tenCongThuc').value;
        var thoiGianHieuLuc = document.getElementById('thoiGianHieuLuc').value;
        var errorMsg = "";
        if (nameStr.length == 0) {
            showMessage("Tên không được để trống", false);
            errorMsg += ".";
        }
        if (thoiGianHieuLuc.length == 0) {
            showMessage("Thời gian hiệu lực không được để trống", false);
            errorMsg += ".";
        }
        if (text.length == 0) {
            showMessage("Công thức không được để trống", false);
            errorMsg += ".";
        }
        else if (text[text.length - 2] == '+' || text[text.length - 2] == '-') {
            showMessage("Công thức không đúng định dạng", false);
            errorMsg += ".";
        }
        if (errorMsg.length != 0) {
            return;
        }
        if (text.length != 0 && (text.includes('+') || text.includes('-')) && text[text.length - 2] != '+' && text[text.length - 2] != '-' && nameStr.length != 0 && thoiGianHieuLuc.length != 0) {
            $.ajax({
                method:'POST',
                cache: false,
                url: "@Url.Action("UpdateFormula","Admin")",
                data: { formula: text, name: nameStr, thoiGian: thoiGianHieuLuc },
                dataType:'json',
                success: function (message) {
                    showMessage("Cập nhật công thức thành công", true);
                    $('.datepicker').datepicker('destroy');
                    var dateParts = thoiGianHieuLuc.split("/");
                    updateCalendar(new Date(dateParts[2], dateParts[1] - 1, dateParts[0]));
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    showMessage("Cập nhật công thức thất bại", false);
                }
            });
        }
    }
</script>